{"version":3,"sources":["redux/reducers/TaskReducer.js","redux/store.js","components/Head.jsx","components/Sidebar.jsx","components/UI/Statuscard.jsx","components/Page/Dashboard.jsx","redux/action/TaskAction.js","components/UI/CustomModal.jsx","components/UI/Table.jsx","components/Page/TodayTask.jsx","components/Page/ImportantTask.jsx","components/UI/BigCalendar.jsx","components/Page/ScheduleTask.jsx","components/Page/ErrorPage.jsx","App.js","serviceWorker.js","index.js"],"names":["defaultState","name","count","status","task","TaskReducer","state","action","type","payload","store","createStore","applyMiddleware","logger","thunk","Head","React","useState","anchorEl","setAnchorEl","handleClose","className","href","data-toggle","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","Sidebar","props","link","activeLink","data-color","data-background-color","data-image","Statuscard","icon","category","title","footerIcon","footer","footerLink","loction","text","color","Dashboard","fetchData","useDispatch","Axios","get","then","response","GET","data","CustomModal","Task","setTask","Modal","size","centered","Header","closeButton","Title","Body","noValidate","autoComplete","TextField","label","variant","fullWidth","onChange","target","value","Footer","Button","alert","onHide","ScheduleModal","Date","StartDate","setStartDate","EndDate","setEndDate","handleDateChange","date","handleENDDateChange","utils","DateFnsUtils","margin","format","KeyboardButtonProps","console","log","Table","lg","Data","dispatch","currentDate","useEffect","modalShow","setModalShow","show","data-tabs","map","item","Moment","TaskDate","TaskTime","key","Checkbox","checked","rel","colSpan","style","textAlign","CircularProgress","TodayTask","useSelector","ImportantTask","localizer","momentLocalizer","moment","BigCalendar","events","startAccessor","endAccessor","height","LinearProgress","ScheduleTask","myEventsList","push","start","end","setHours","getHours","ErrorPage","width","viewBox","version","xmlns","xmlnsXlink","sketch","stroke","strokeWidth","fill","fillRule","d","App","customHistory","createBrowserHistory","window","location","pathname","history","exact","path","component","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.af6c0d70.chunk.js","sourcesContent":["const defaultState = {\r\n    name : \"Sahil\",\r\n    count: 1,\r\n    status : true,\r\n    task: null\r\n}\r\n\r\nconst TaskReducer = (state=defaultState,action) => {\r\n    switch (action.type) {\r\n      case \"INSERT\":\r\n        return {\r\n          ...state,\r\n          name: \"ABC\",\r\n          count: state.count + 1,\r\n        };\r\n      case \"DELETE\":\r\n        return {\r\n          ...state,\r\n          name: \"SAHIL\",\r\n          count: state.count - 1,\r\n        };\r\n      case \"Check\":\r\n        return {\r\n          ...state,\r\n          status: state.status ? false : true,\r\n        };\r\n      case \"GET\":\r\n        return {\r\n          ...state,\r\n          task: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default TaskReducer;","import { createStore,applyMiddleware } from 'redux'\r\nimport TaskReducer from './reducers/TaskReducer'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(TaskReducer, applyMiddleware(logger, thunk));","import React from 'react';\r\nimport {Menu,MenuItem} from '@material-ui/core';\r\n\r\nfunction Head() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n   \r\n     <nav className=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top \">\r\n  <div className=\"container-fluid\">\r\n    <div className=\"navbar-wrapper\">\r\n      <a className=\"navbar-brand\" href=\"/\">Dashboard</a>\r\n    </div>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"sr-only\">Toggle navigation</span>\r\n      <span className=\"navbar-toggler-icon icon-bar\" />\r\n      <span className=\"navbar-toggler-icon icon-bar\" />\r\n      <span className=\"navbar-toggler-icon icon-bar\" />\r\n    </button>\r\n    <div className=\"collapse navbar-collapse justify-content-end\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link\" href=\"/\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <i className=\"material-icons\">notifications</i>\r\n            <span className=\"notification\">5</span>\r\n            <p className=\"d-lg-none d-md-block\">\r\n              Some Actions\r\n            </p>\r\n          </a>\r\n          <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n            <a className=\"dropdown-item\" href=\"/\">Mike John responded to your email</a>\r\n            <a className=\"dropdown-item\" href=\"/\">You have 5 new tasks</a>\r\n            <a className=\"dropdown-item\" href=\"/\">You're now friend with Andrew</a>\r\n            <a className=\"dropdown-item\" href=\"/\">Another Notification</a>\r\n            <a className=\"dropdown-item\" href=\"/\">Another One</a>\r\n          </div>\r\n        </li>\r\n\r\n\r\n\r\n        <li className=\"nav-item dropdown\">\r\n          <button className=\"nav-link btn btn-link\" aria-expanded=\"false\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            <i className=\"material-icons\">person</i>\r\n            <p className=\"d-lg-none d-md-block\">\r\n              Account\r\n            </p>\r\n          </button>\r\n\r\n          <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <div className=\"dropdown-divider\" />\r\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n        </Menu>\r\n        </li>\r\n\r\n\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n  );\r\n}\r\n\r\nexport default Head;\r\n","import React from 'react';\r\n\r\nfunction Sidebar(props) {\r\n  const link = props.activeLink\r\n  return (\r\n  <div className=\"sidebar\" data-color=\"azure\" data-background-color=\"white\" data-image=\"../assets/img/sidebar-1.jpg\">\r\n  <div className=\"logo\"><a href=\"/\" className=\"simple-text logo-normal\">\r\n      TO DO\r\n    </a></div>\r\n  <div className=\"sidebar-wrapper\">\r\n    <ul className=\"nav\">\r\n      <li className={ link === \"/\" ? \"nav-item active\" : \"nav-item \" }>\r\n        <a className=\"nav-link\" href=\"/\">\r\n          <i className=\"material-icons\">dashboard</i>\r\n          <p>Dashboard</p>\r\n        </a>\r\n      </li>\r\n      \r\n      <li className={ link === \"/latest\" ? \"nav-item active\" : \"nav-item \" }>\r\n        <a className=\"nav-link\" href=\"/latest\">\r\n          <i className=\"material-icons\">today</i>\r\n          <p>Today</p>\r\n        </a>\r\n      </li>\r\n      <li className={ link === \"/important\" ? \"nav-item active\" : \"nav-item \" }>\r\n        <a className=\"nav-link\" href=\"/important\">\r\n          <i className=\"material-icons\">stars</i>\r\n          <p>Important</p>\r\n        </a>\r\n      </li>\r\n      <li className={ link === \"/planned\" ? \"nav-item active\" : \"nav-item \" }>\r\n        <a className=\"nav-link\" href=\"/planned\">\r\n          <i className=\"material-icons\">schedule</i>\r\n          <p>planned</p>\r\n        </a>\r\n      </li>\r\n\r\n      <li className=\"nav-item active-pro\">\r\n        <a className=\"nav-link\" href=\"/planned\">\r\n          <i className=\"material-icons\">person</i>\r\n          <p>User Profile</p>\r\n        </a>\r\n      </li>\r\n      \r\n      \r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nfunction Statuscard(props) {\r\n    const icon = props.icon ? props.icon : \"content_copy\";\r\n    const category = props.category ? props.category : \"Card Category\";\r\n    const title = props.title ? props.title : \"Card Title\";\r\n    const footerIcon = props.footer ? props.footer.icon : \"\";\r\n    const footerLink = props.footer ? props.footer.link : {loction:\"\",text:\"for Link pass as prpos link={loction:' ',text:' '}\"};\r\n    const color = props.color ? \"card-header-\"+props.color : \"card-header-success\";\r\n\r\n  return (\r\n    <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n      <div className=\"card card-stats\">\r\n        <div className={\"card-header card-header-icon \"+color}>\r\n          <div className=\"card-icon\">\r\n            <i className=\"material-icons\">{icon}</i>\r\n          </div>\r\n          <p className=\"card-category\">{category}</p>\r\n          <h3 className=\"card-title\">\r\n            {title}\r\n          </h3>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <div className=\"stats\">\r\n            { footerIcon ? <i className=\"material-icons text-primary\">{footerIcon}</i> : \"\" }\r\n            { footerLink ?  <a href={footerLink.loction} className={footerLink.loction?\"\":\"disabled\"}>{footerLink.text}</a> : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Statuscard;","import React from \"react\";\r\nimport Statuscard from \"../UI/Statuscard\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n        <div className=\"row\">\r\n          <Statuscard\r\n            icon = \"home\"\r\n            color = \"danger\"\r\n            footer ={{ link: { loction: \"/\", text: \"Home\" }, icon: \"home\" }}\r\n            category =\"Total Task\"\r\n            title = \"50\"\r\n          />\r\n          <Statuscard\r\n            icon = \"today\"\r\n            color = \"primary\"\r\n            footer ={{ link: { loction: \"/latest\", text: \"Today's Task\" }, icon: \"today\" }}\r\n            category =\"Today's Task\"\r\n            title = \"5\"\r\n          />\r\n          <Statuscard\r\n            icon = \"stars\"\r\n            color = \"info\"\r\n            footer ={{ link: { loction: \"/important\", text: \"Priority\" }, icon: \"stars\" }}\r\n            category =\"Priority Task\"\r\n            title = \"2\"\r\n          />\r\n          <Statuscard />\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import Axios from 'axios';\r\n\r\nexport const fetchData = () => {\r\n    return (useDispatch) => {\r\n        Axios.get(\"http://192.168.1.104:4400/task\").then(response=>{\r\n            useDispatch(GET(response.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const GET = data => {\r\n    return {\r\n        type: 'GET',\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const insert = () => {\r\n    return {\r\n        type: 'INSERT',\r\n    }\r\n}\r\n\r\nexport const update = () => {\r\n    return {\r\n        type: 'UPDATE',\r\n    }\r\n}\r\n\r\nexport const Delete = () => {\r\n    return {\r\n        type: 'DELETE',\r\n    }\r\n}\r\n\r\nexport const Check = () => {\r\n    return {\r\n        type: 'Check',\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { TextField,InputLabel } from \"@material-ui/core\";\r\nimport {\r\n MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker\r\n} from '@material-ui/pickers';\r\n\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nfunction CustomModal(props) {\r\n  const [Task, setTask] = useState(\"initialState\")\r\n\r\n const onFormChange=(event)=>{\r\n    setTask(event.target.value);\r\n  }\r\n\r\n  const onFormSubmit=()=>{\r\n    alert(Task);\r\n  }\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add a Task</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form noValidate autoComplete=\"off\">\r\n          <TextField id=\"outlined-basic\" label=\"Task\" variant=\"outlined\" fullWidth onChange={onFormChange}/>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onFormSubmit}>Save</Button>\r\n        <Button variant=\"outline-danger\" onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CustomModal;\r\n\r\nexport function ScheduleModal(props) {\r\n  const [Task, setTask] = useState(\"initialState\")\r\n  const [StartDate, setStartDate] = React.useState(new Date());\r\n  const [EndDate, setEndDate] = React.useState(new Date());\r\n\r\n const onFormChange=(event)=>{\r\n    setTask(event.target.value);\r\n  }\r\n\r\n  const onFormSubmit=()=>{\r\n    console.log(Task,StartDate,EndDate);\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const handleENDDateChange = (date) => {\r\n    setEndDate(date);\r\n  }\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    <Modal\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add a Task</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n          <TextField id=\"outlined-basic\" label=\"Task\" variant=\"outlined\" fullWidth onChange={onFormChange}/>\r\n          </div>\r\n         \r\n          <div className=\"col-md-6 col-sm-6\">\r\n            <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Starting Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={StartDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </div>\r\n          <div className=\"col-md-6 col-sm-6\">\r\n          <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Starting Time\"\r\n          value={StartDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-sm-6\">\r\n            <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Ending Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={EndDate}\r\n          onChange={handleENDDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </div>\r\n          <div className=\"col-md-6 col-sm-6\">\r\n          <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Ending Time\"\r\n          value={EndDate}\r\n          onChange={handleENDDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n          </div>\r\n\r\n        </div>\r\n    </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onFormSubmit}>Save</Button>\r\n        <Button variant=\"outline-danger\" onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n    </MuiPickersUtilsProvider>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Checkbox, TextField, CircularProgress, Paper } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Check, fetchData } from \"../../redux/action/TaskAction\";\r\nimport Moment from \"moment\";\r\nimport CustomModal from \"./CustomModal\";\r\n\r\nfunction Table(props) {\r\n  const lg = \"col-lg-\" + props.lg;\r\n  const data = props.Data;\r\n  const dispatch = useDispatch();\r\n  const currentDate = props.currentDate ? true : false;\r\n  useEffect(() => {\r\n    dispatch(fetchData());\r\n  }, []);\r\n\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  return (\r\n    <div className=\"row justify-content-lg-center col-lg-12\">\r\n      <CustomModal show={modalShow} onHide={() => setModalShow(false)} />\r\n\r\n      <div className={lg}>\r\n        <div className=\"card\">\r\n          <div className=\"card-header card-header-tabs card-header-primary\">\r\n            <div className=\"nav-tabs-navigation\">\r\n              <div className=\"nav-tabs-wrapper\">\r\n                <ul className=\"nav nav-tabs\" data-tabs=\"tabs\">\r\n                <li className=\"nav-item\">\r\n                    <button\r\n                      className=\"nav-link btn btn-link\"\r\n                      onClick={() => setModalShow(true)}\r\n                      data-toggle=\"tab\"\r\n                    >\r\n                      <i className=\"material-icons\">add</i> Add\r\n                      <div className=\"ripple-container\" />\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            <div className=\"tab-content\">\r\n              <div className=\"tab-pane active\" id=\"profile\">\r\n                <table className=\"table\">\r\n                  <tbody>\r\n                    {data ? (\r\n                      data.map((item) => {\r\n                        if (\r\n                          currentDate\r\n                            ? Moment(item.task.Date).format(\"DD-MM-YYYY\") ===\r\n                              Moment().format(\"DD-MM-YYYY\")\r\n                            : true\r\n                        ) {\r\n                          const TaskDate = Moment(item.task.Date).format(\r\n                            \"DD-MM-YYYY\"\r\n                          );\r\n                          const TaskTime = Moment(item.task.Date).format(\r\n                            \"hh:mm\"\r\n                          );\r\n                          return (\r\n                            <tr key={item.id}>\r\n                              <td>\r\n                                <Checkbox\r\n                                  color=\"primary\"\r\n                                  checked={item.status}\r\n                                  onChange={() => dispatch(Check())}\r\n                                />\r\n                              </td>\r\n                              <td> {item.task.Task} </td>\r\n                              <td> {TaskDate} </td>\r\n                              <td> {TaskTime} </td>\r\n                              <td className=\"td-actions text-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  rel=\"tooltip\"\r\n                                  title=\"Edit Task\"\r\n                                  className=\"btn btn-primary btn-link btn-sm\"\r\n                                  onClick={() => {\r\n                                    alert(\"EDIT\", item.id);\r\n                                    console.log(item);\r\n                                  }}\r\n                                >\r\n                                  <i className=\"material-icons\">edit</i>\r\n                                </button>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  rel=\"tooltip\"\r\n                                  title=\"Remove\"\r\n                                  className=\"btn btn-danger btn-link btn-sm\"\r\n                                  onClick={() => {\r\n                                    alert(\"DELETE\", item.id);\r\n                                    console.log(item);\r\n                                  }}\r\n                                >\r\n                                  <i className=\"material-icons\">close</i>\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      })\r\n                    ) : (\r\n                      <tr>\r\n                        <td colSpan=\"5\" style={{ textAlign: \"center\" }}>\r\n                          <CircularProgress />\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"../UI/Table\";\r\n\r\nfunction TodayTask() {\r\n  const task = useSelector((state) => state.task);\r\n  return (\r\n    <div className=\"row\">\r\n      <Table lg=\"10\" Data={task} currentDate={true} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodayTask;\r\n","import React from 'react'\r\n\r\nfunction ImportantTask() {\r\n    return (\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card card-chart\">\r\n                <div className=\"card-header card-header-success\">\r\n                  <div className=\"ct-chart\" id=\"dailySalesChart\">\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Daily Sales</h4>\r\n                  <p className=\"card-category\">\r\n                    <span className=\"text-success\">\r\n                      <i className=\"fa fa-long-arrow-up\" /> 55%{\" \"}\r\n                    </span>{\" \"}\r\n                    increase in today sales.\r\n                  </p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <div className=\"stats\">\r\n                    <i className=\"material-icons\">access_time</i> updated 4\r\n                    minutes ago\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ImportantTask\r\n","import React from 'react'\r\nimport { LinearProgress } from '@material-ui/core'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport { ScheduleModal } from './CustomModal'\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nfunction BigCalendar(props) {\r\n    console.log(props)\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header card-header-tabs card-header-info\">\r\n            <ScheduleModal show={modalShow} onHide={() => setModalShow(false)} />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 d-flex justify-content-start\">\r\n                <span className=\"btn btn-info disable\"> Task </span>\r\n                </div>\r\n                \r\n                <div className=\"col-md-6 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-info\" onClick={() => setModalShow(true)}> <i className=\"material-icons\">add</i> Add</button>\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n            { props.events ? <Calendar\r\n      localizer={localizer}\r\n      events={props.events}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n      style={{ height: \"65vh\" }}\r\n    /> : <LinearProgress /> }\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BigCalendar","import React, { useEffect } from 'react'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchData } from '../../redux/action/TaskAction';\r\nimport BigCalendar from '../UI/BigCalendar';\r\nimport moment from 'moment';\r\n\r\nfunction ScheduleTask() {\r\n    const task = useSelector((state) => state.task);\r\n    const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchData());\r\n  }, []);\r\n\r\n  const myEventsList = task ? [ ] : null ;\r\n  \r\n  const data = task ? (\r\n    task.map((item) => { \r\n        myEventsList.push({\r\n            id: item.id,\r\n            title: item.task.Task,\r\n            start: new Date(moment(item.task.Date).format(\"YYYY, M , D  HH:MM\")),\r\n            end: new Date(new Date(item.task.Date).setHours(new Date(item.task.Date).getHours()+8)),\r\n        }) \r\n    })) : \"\";\r\n\r\n    return (\r\n        <div>\r\n            <BigCalendar events={myEventsList}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScheduleTask\r\n","import React from \"react\";\r\nimport \"../../assets/css/error.css\";\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div>\r\n      <svg\r\n        width=\"380px\"\r\n        height=\"500px\"\r\n        viewBox=\"0 0 837 1045\"\r\n        className=\"svg\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        sketch=\"http://www.bohemiancoding.com/sketch/ns\"\r\n      >\r\n        <g\r\n          id=\"Page-1\"\r\n          stroke=\"none\"\r\n          strokeWidth={1}\r\n          fill=\"none\"\r\n          fillRule=\"evenodd\"\r\n          type=\"MSPage\"\r\n        >\r\n          <path\r\n            d=\"M353,9 L626.664028,170 L626.664028,487 L353,642 L79.3359724,487 L79.3359724,170 L353,9 Z\"\r\n            id=\"Polygon-1\"\r\n            stroke=\"#007FB2\"\r\n            strokeWidth={6}\r\n            type=\"MSShapeGroup\"\r\n          />\r\n          <path\r\n            d=\"M78.5,529 L147,569.186414 L147,648.311216 L78.5,687 L10,648.311216 L10,569.186414 L78.5,529 Z\"\r\n            id=\"Polygon-2\"\r\n            stroke=\"#EF4A5B\"\r\n            strokeWidth={6}\r\n            type=\"MSShapeGroup\"\r\n          />\r\n          <path\r\n            d=\"M773,186 L827,217.538705 L827,279.636651 L773,310 L719,279.636651 L719,217.538705 L773,186 Z\"\r\n            id=\"Polygon-3\"\r\n            stroke=\"#795D9C\"\r\n            strokeWidth={6}\r\n            type=\"MSShapeGroup\"\r\n          />\r\n          <path\r\n            d=\"M639,529 L773,607.846761 L773,763.091627 L639,839 L505,763.091627 L505,607.846761 L639,529 Z\"\r\n            id=\"Polygon-4\"\r\n            stroke=\"#F2773F\"\r\n            strokeWidth={6}\r\n            type=\"MSShapeGroup\"\r\n          />\r\n          <path\r\n            d=\"M281,801 L383,861.025276 L383,979.21169 L281,1037 L179,979.21169 L179,861.025276 L281,801 Z\"\r\n            id=\"Polygon-5\"\r\n            stroke=\"#36B455\"\r\n            strokeWidth={6}\r\n            type=\"MSShapeGroup\"\r\n          />\r\n        </g>\r\n      </svg>\r\n\r\n      <div className=\"message-box\">\r\n        <h1>404</h1>\r\n        <p>Page not found</p>\r\n        <div className=\"buttons-con\">\r\n          <div className=\"action-link-wrap\">\r\n            <a href=\"/\" className=\"link-button\">\r\n              Go to Home Page\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route,Switch } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport './App.css';\r\n\r\nimport Head from \"./components/Head\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nimport Dashboard from \"./components/Page/Dashboard\";\r\nimport TodayTask from './components/Page/TodayTask';\r\nimport ImportantTask from './components/Page/ImportantTask';\r\nimport ScheduleTask from './components/Page/ScheduleTask';\r\nimport ErrorPage from './components/Page/ErrorPage';\r\n\r\nfunction App() {\r\n  const customHistory = createBrowserHistory(); \r\n  const link = window.location.pathname\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"wrapper\">\r\n        <Sidebar activeLink={link} />\r\n        <div className=\"main-panel\">\r\n          <Head />\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <BrowserRouter history={customHistory}>\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={Dashboard} />\r\n                  <Route exact path=\"/latest\" component={TodayTask} />\r\n                  <Route exact path=\"/important\" component={ImportantTask} />\r\n                  <Route exact path=\"/planned\" component={ScheduleTask} />\r\n                  <Route component={ErrorPage} />\r\n                </Switch>\r\n              </BrowserRouter>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}